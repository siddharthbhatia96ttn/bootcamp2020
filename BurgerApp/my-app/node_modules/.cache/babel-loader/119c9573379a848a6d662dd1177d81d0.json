{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthbhatia/Desktop/BurgerApp/my-app/src/containers/burgerbuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/aux/Aux';\nimport Burger from '../../components/burger/Burger';\nimport BuildControls from '../../components/burger/buildcontrols/BuildControls';\nimport Modal from '../../components/ui/modal/Modal';\nimport OrderSummary from '../../components/burger/ordersummary/OrderSummary';\nimport Spinner from '../../components/ui/spinner/Spinner';\nimport withErrorHandeler from '../../hoc/witherrorhandeller/WithErrorHandeller';\nimport axios from '../../Axios-Orders';\nconst ingredentPrice = {\n  salad: 5,\n  cheese: 4,\n  meat: 10,\n  bacon: 7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredent: null,\n      totalPrice: 40,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredentHandler = type => {\n      const oldCount = this.state.ingredent[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredents = { ...this.state.ingredent\n      };\n      updatedIngredents[type] = updatedCount;\n      const priceAddition = ingredentPrice[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredent: updatedIngredents\n      });\n      this.updatePurchaseState(updatedIngredents);\n    };\n\n    this.purchaseHandeler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandeler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandeler = () => {\n      /*\n      {  this.setState({loading:true});\n       const order={\n         ingredient:this.state.ingredents,\n         price:this.state.totalPrice,\n         customer:{\n           name:'Siddharth',\n           address:{\n             street:'10',\n             zipCode:'41351',\n             country:'India'\n           },\n           email:'siddharth@gmail.com',\n         },\n         deliveryMethod:'COD'\n       }\n      {   axios.post('/orders.json',order)\n       .then(response=>{\n         this.setState({loading:false,purchasing:false});\n       })\n       .catch(error=>{\n           this.setState({loading:false,purchasing:false})\n       });}    */\n      this.props.history.push('/checkout');\n    };\n\n    this.removeIngredentHandler = type => {\n      const oldCount = this.state.ingredent[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredents = { ...this.state.ingredent\n      };\n      updatedIngredents[type] = updatedCount;\n      const priceDeduction = ingredentPrice[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredent: updatedIngredents\n      });\n      this.updatePurchaseState(updatedIngredents);\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    axios.get('https://react-my-burger-91338.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredent: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchaseState(ingredent) {\n    const sum = Object.keys(ingredent).map(igKey => {\n      return ingredent[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredent\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 35\n      }\n    }, \"Ingedients can't be loaded\") : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 69\n      }\n    });\n\n    if (this.state.ingredent) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredent: this.state.ingredent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredentAdded: this.addIngredentHandler,\n        ingredentRemoved: this.removeIngredentHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandeler,\n        price: this.state.totalPrice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        ingredent: this.state.ingredent,\n        price: this.state.totalPrice,\n        purchasedCanceled: this.purchaseCancelHandeler,\n        purchaseContinued: this.purchaseContinueHandeler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 22\n        }\n      });\n\n      if (this.state.loading) {\n        orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 24\n          }\n        });\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandeler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandeler(BurgerBuilder, axios);","map":{"version":3,"sources":["/Users/siddharthbhatia/Desktop/BurgerApp/my-app/src/containers/burgerbuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandeler","axios","ingredentPrice","salad","cheese","meat","bacon","BurgerBuilder","state","ingredent","totalPrice","purchasable","purchasing","loading","error","addIngredentHandler","type","oldCount","updatedCount","updatedIngredents","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","purchaseHandeler","purchaseCancelHandeler","purchaseContinueHandeler","props","history","push","removeIngredentHandler","priceDeduction","componentDidMount","console","log","get","then","response","data","catch","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,YAAP,MAA0B,mDAA1B;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,iBAAP,MAA8B,iDAA9B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,cAAc,GAAC;AACnBC,EAAAA,KAAK,EAAC,CADa;AAEnBC,EAAAA,MAAM,EAAC,CAFY;AAGnBC,EAAAA,IAAI,EAAC,EAHc;AAInBC,EAAAA,KAAK,EAAC;AAJa,CAArB;;AAMA,MAAMC,aAAN,SAA4Bd,SAA5B,CACA;AAAA;AAAA;AAAA,SACEe,KADF,GACS;AACLC,MAAAA,SAAS,EAAC,IADL;AAELC,MAAAA,UAAU,EAAC,EAFN;AAGLC,MAAAA,WAAW,EAAC,KAHP;AAILC,MAAAA,UAAU,EAAC,KAJN;AAKLC,MAAAA,OAAO,EAAC,KALH;AAMLC,MAAAA,KAAK,EAAC;AAND,KADT;;AAAA,SAiCEC,mBAjCF,GAiCyBC,IAAD,IAAS;AAC7B,YAAMC,QAAQ,GAAC,KAAKT,KAAL,CAAWC,SAAX,CAAqBO,IAArB,CAAf;AACA,YAAME,YAAY,GAACD,QAAQ,GAAC,CAA5B;AACA,YAAME,iBAAiB,GAAC,EACtB,GAAG,KAAKX,KAAL,CAAWC;AADQ,OAAxB;AAIAU,MAAAA,iBAAiB,CAACH,IAAD,CAAjB,GAAwBE,YAAxB;AACA,YAAME,aAAa,GAAClB,cAAc,CAACc,IAAD,CAAlC;AACA,YAAMK,QAAQ,GAAC,KAAKb,KAAL,CAAWE,UAA1B;AACA,YAAMY,QAAQ,GAACD,QAAQ,GAACD,aAAxB;AACA,WAAKG,QAAL,CAAc;AAACb,QAAAA,UAAU,EAACY,QAAZ;AAAqBb,QAAAA,SAAS,EAACU;AAA/B,OAAd;AACA,WAAKK,mBAAL,CAAyBL,iBAAzB;AACD,KA9CH;;AAAA,SAgDEM,gBAhDF,GAgDqB,MAAM;AACvB,WAAKF,QAAL,CAAc;AAACX,QAAAA,UAAU,EAAC;AAAZ,OAAd;AACD,KAlDH;;AAAA,SAmDEc,sBAnDF,GAmDyB,MAAI;AACzB,WAAKH,QAAL,CAAc;AAACX,QAAAA,UAAU,EAAC;AAAZ,OAAd;AACD,KArDH;;AAAA,SAuDEe,wBAvDF,GAuD2B,MACzB;AAAC;;;;;;;;;;;;;;;;;;;;;;;AAuBH,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACG,KAhFH;;AAAA,SAiFIC,sBAjFJ,GAiF8Bf,IAAD,IAAS;AAClC,YAAMC,QAAQ,GAAC,KAAKT,KAAL,CAAWC,SAAX,CAAqBO,IAArB,CAAf;;AACA,UAAGC,QAAQ,IAAG,CAAd,EACA;AACE;AACD;;AACD,YAAMC,YAAY,GAACD,QAAQ,GAAC,CAA5B;AACA,YAAME,iBAAiB,GAAC,EACtB,GAAG,KAAKX,KAAL,CAAWC;AADQ,OAAxB;AAGAU,MAAAA,iBAAiB,CAACH,IAAD,CAAjB,GAAwBE,YAAxB;AACA,YAAMc,cAAc,GAAC9B,cAAc,CAACc,IAAD,CAAnC;AACA,YAAMK,QAAQ,GAAC,KAAKb,KAAL,CAAWE,UAA1B;AACA,YAAMY,QAAQ,GAACD,QAAQ,GAACW,cAAxB;AACA,WAAKT,QAAL,CAAc;AAACb,QAAAA,UAAU,EAACY,QAAZ;AAAqBb,QAAAA,SAAS,EAACU;AAA/B,OAAd;AACA,WAAKK,mBAAL,CAAyBL,iBAAzB;AACD,KAjGH;AAAA;;AAUEc,EAAAA,iBAAiB,GACjB;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACA3B,IAAAA,KAAK,CAACmC,GAAN,CAAU,+DAAV,EACCC,IADD,CACMC,QAAQ,IAAE;AACd,WAAKf,QAAL,CAAc;AAACd,QAAAA,SAAS,EAAC6B,QAAQ,CAACC;AAApB,OAAd;AACD,KAHD,EAICC,KAJD,CAIO1B,KAAK,IAAE;AACZ,WAAKS,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAC;AAAP,OAAd;AACD,KAND;AAOD;;AAEDU,EAAAA,mBAAmB,CAACf,SAAD,EACnB;AACE,UAAMgC,GAAG,GAACC,MAAM,CAACC,IAAP,CAAYlC,SAAZ,EACTmC,GADS,CACLC,KAAK,IAAG;AACX,aAAOpC,SAAS,CAACoC,KAAD,CAAhB;AACD,KAHS,EAITC,MAJS,CAIF,CAACL,GAAD,EAAKM,EAAL,KAAU;AAChB,aAAON,GAAG,GAACM,EAAX;AACD,KANS,EAMR,CANQ,CAAV;AAOA,SAAKxB,QAAL,CAAc;AAACZ,MAAAA,WAAW,EAAC8B,GAAG,GAAC;AAAjB,KAAd;AACD;;AAmEDO,EAAAA,MAAM,GAAE;AACN,UAAMC,YAAY,GAAC,EACjB,GAAG,KAAKzC,KAAL,CAAWC;AADG,KAAnB;;AAGA,SAAI,IAAIyC,GAAR,IAAeD,YAAf,EACA;AACEA,MAAAA,YAAY,CAACC,GAAD,CAAZ,GAAkBD,YAAY,CAACC,GAAD,CAAZ,IAAmB,CAArC;AACD;;AACD,QAAIC,YAAY,GAAC,IAAjB;AACA,QAAIC,MAAM,GAAC,KAAK5C,KAAL,CAAWM,KAAX,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAnB,gBAAqD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhE;;AACA,QAAG,KAAKN,KAAL,CAAWC,SAAd,EAAwB;AACtB2C,MAAAA,MAAM,gBACF,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAE,KAAK5C,KAAL,CAAWC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEA,oBAAC,aAAD;AACA,QAAA,cAAc,EAAE,KAAKM,mBADrB;AAEA,QAAA,gBAAgB,EAAE,KAAKgB,sBAFvB;AAGA,QAAA,QAAQ,EAAEkB,YAHV;AAIA,QAAA,WAAW,EAAE,KAAKzC,KAAL,CAAWG,WAJxB;AAKA,QAAA,OAAO,EAAE,KAAKc,gBALd;AAMA,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWE,UANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADJ;AAaEyC,MAAAA,YAAY,gBAAC,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAE,KAAK3C,KAAL,CAAWC,SAApC;AACT,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,UADT;AAET,QAAA,iBAAiB,EAAE,KAAKgB,sBAFf;AAGT,QAAA,iBAAiB,EAAE,KAAKC,wBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;;AAIA,UAAG,KAAKnB,KAAL,CAAWK,OAAd,EAAsB;AACpBsC,QAAAA,YAAY,gBAAC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACD;AACJ;;AACD,wBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAK3C,KAAL,CAAWI,UAAxB;AAAoC,MAAA,WAAW,EAAE,KAAKc,sBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGyB,YADH,CADA,EAICC,MAJD,CADF;AAQD;;AA3IH;;AA6IC,eAAepD,iBAAiB,CAACO,aAAD,EAAeN,KAAf,CAAhC","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/aux/Aux';\nimport Burger from '../../components/burger/Burger';\nimport BuildControls from '../../components/burger/buildcontrols/BuildControls';\nimport Modal from '../../components/ui/modal/Modal';\nimport OrderSummary from  '../../components/burger/ordersummary/OrderSummary';\nimport Spinner from '../../components/ui/spinner/Spinner';\nimport withErrorHandeler from '../../hoc/witherrorhandeller/WithErrorHandeller';\nimport axios from '../../Axios-Orders';\n\nconst ingredentPrice={\n  salad:5,\n  cheese:4,\n  meat:10,\n  bacon:7\n}\nclass BurgerBuilder extends Component\n{\n  state ={\n    ingredent:null,\n    totalPrice:40,\n    purchasable:false,\n    purchasing:false,\n    loading:false,\n    error:false\n  }\n\n  componentDidMount()\n  {\n    console.log(this.props);\n    axios.get('https://react-my-burger-91338.firebaseio.com/ingredients.json')\n    .then(response=>{\n      this.setState({ingredent:response.data});\n    })\n    .catch(error=>{\n      this.setState({error:true})\n    });\n  }\n\n  updatePurchaseState(ingredent)\n  {\n    const sum=Object.keys(ingredent)\n    .map(igKey =>{\n      return ingredent[igKey];\n    })\n    .reduce((sum,el)=>{\n      return sum+el;\n    },0);\n    this.setState({purchasable:sum>0});\n  }\n  addIngredentHandler = (type) =>{\n    const oldCount=this.state.ingredent[type];\n    const updatedCount=oldCount+1;\n    const updatedIngredents={\n      ...this.state.ingredent\n    };\n\n    updatedIngredents[type]=updatedCount;\n    const priceAddition=ingredentPrice[type];\n    const oldPrice=this.state.totalPrice;\n    const newPrice=oldPrice+priceAddition;\n    this.setState({totalPrice:newPrice,ingredent:updatedIngredents});\n    this.updatePurchaseState(updatedIngredents);\n  }\n\n  purchaseHandeler = () => {\n    this.setState({purchasing:true});\n  }\n  purchaseCancelHandeler=()=>{\n    this.setState({purchasing:false});\n  }\n\n  purchaseContinueHandeler=() =>\n  {/*\n  {  this.setState({loading:true});\n    const order={\n      ingredient:this.state.ingredents,\n      price:this.state.totalPrice,\n      customer:{\n        name:'Siddharth',\n        address:{\n          street:'10',\n          zipCode:'41351',\n          country:'India'\n        },\n        email:'siddharth@gmail.com',\n      },\n      deliveryMethod:'COD'\n    }\n  {   axios.post('/orders.json',order)\n    .then(response=>{\n      this.setState({loading:false,purchasing:false});\n    })\n    .catch(error=>{\n        this.setState({loading:false,purchasing:false})\n    });}    */\nthis.props.history.push('/checkout');\n  }\n    removeIngredentHandler = (type) =>{\n    const oldCount=this.state.ingredent[type];\n    if(oldCount <=0)\n    {\n      return;\n    }\n    const updatedCount=oldCount-1;\n    const updatedIngredents={\n      ...this.state.ingredent\n    };\n    updatedIngredents[type]=updatedCount;\n    const priceDeduction=ingredentPrice[type];\n    const oldPrice=this.state.totalPrice;\n    const newPrice=oldPrice-priceDeduction;\n    this.setState({totalPrice:newPrice,ingredent:updatedIngredents});\n    this.updatePurchaseState(updatedIngredents);\n  }\n\n  render(){\n    const disabledInfo={\n      ...this.state.ingredent\n    };\n    for(let key in disabledInfo)\n    {\n      disabledInfo[key]=disabledInfo[key]<=0\n    }\n    let orderSummary=null;\n    let burger=this.state.error ? <p>Ingedients can't be loaded</p>:<Spinner/>\n    if(this.state.ingredent){\n      burger=(\n          <Aux>\n          <Burger ingredent={this.state.ingredent}/>\n          <BuildControls\n          ingredentAdded={this.addIngredentHandler}\n          ingredentRemoved={this.removeIngredentHandler}\n          disabled={disabledInfo}\n          purchasable={this.state.purchasable}\n          ordered={this.purchaseHandeler}\n          price={this.state.totalPrice}\n          />\n          </Aux>\n        );\n        orderSummary=<OrderSummary ingredent={this.state.ingredent}\n            price={this.state.totalPrice}\n            purchasedCanceled={this.purchaseCancelHandeler}\n            purchaseContinued={this.purchaseContinueHandeler}/>;\n        if(this.state.loading){\n          orderSummary=<Spinner/>;\n        }\n    }\n    return(\n      <Aux>\n      <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandeler}>\n        {orderSummary}\n      </Modal>\n      {burger}\n      </Aux>\n    );\n  }\n}\n export default withErrorHandeler(BurgerBuilder,axios);\n"]},"metadata":{},"sourceType":"module"}