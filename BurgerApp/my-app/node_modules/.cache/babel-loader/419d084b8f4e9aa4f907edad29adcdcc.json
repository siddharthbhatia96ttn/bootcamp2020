{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthbhatia/Desktop/BurgerApp/my-app/src/components/burger/Burger.js\";\nimport React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredent from './burgeringredent/BurgerIngredent';\n\nconst burger = props => {\n  let transformedIngredent = Object.keys(props.ingredent).map(igKey => {\n    return [...Array(props.ingredent[igKey])].map((_, i) => {\n      console.log(i);\n      return /*#__PURE__*/React.createElement(BurgerIngredent, {\n        key: igKey + i,\n        type: igKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 14\n        }\n      }); //igKey=salad and i =1,2,3//creation of unique key for each ingredent\n    }); //[,] having array with 2 elements\n  }).reduce((arr, el) => {\n    return arr.concat(el);\n  }, []);\n  console.log(transformedIngredent);\n\n  if (transformedIngredent.length === 0) {\n    transformedIngredent = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 26\n      }\n    }, \"Please start adding ingredients\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Burger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BurgerIngredent, {\n    type: \"bread-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), transformedIngredent, /*#__PURE__*/React.createElement(BurgerIngredent, {\n    type: \"bread-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default burger;","map":{"version":3,"sources":["/Users/siddharthbhatia/Desktop/BurgerApp/my-app/src/components/burger/Burger.js"],"names":["React","classes","BurgerIngredent","burger","props","transformedIngredent","Object","keys","ingredent","map","igKey","Array","_","i","console","log","reduce","arr","el","concat","length","Burger"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;AAEA,MAAMC,MAAM,GAAEC,KAAD,IAAW;AACtB,MAAIC,oBAAoB,GAACC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,SAAlB,EACxBC,GADwB,CACpBC,KAAK,IAAG;AACX,WAAO,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,SAAN,CAAgBE,KAAhB,CAAD,CAAT,EAAmCD,GAAnC,CAAuC,CAACG,CAAD,EAAGC,CAAH,KAAO;AACnDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,0BAAO,oBAAC,eAAD;AAAiB,QAAA,GAAG,EAAEH,KAAK,GAAGG,CAA9B;AAAiC,QAAA,IAAI,EAAEH,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,CAFmD,CAEK;AACzD,KAHM,CAAP,CADW,CAIR;AACJ,GANwB,EAOxBM,MAPwB,CAOjB,CAACC,GAAD,EAAKC,EAAL,KAAU;AAChB,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACD,GATwB,EASvB,EATuB,CAAzB;AAUIJ,EAAAA,OAAO,CAACC,GAAR,CAAYV,oBAAZ;;AACJ,MAAGA,oBAAoB,CAACe,MAArB,KAAgC,CAAnC,EACA;AACEf,IAAAA,oBAAoB,gBAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAArB;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACoB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEChB,oBAFD,eAGA,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CADF;AAOD,CAvBD;;AAyBA,eAAeF,MAAf","sourcesContent":["import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredent from './burgeringredent/BurgerIngredent';\n\nconst burger=(props) => {\n  let transformedIngredent=Object.keys(props.ingredent)\n  .map(igKey =>{\n    return [...Array(props.ingredent[igKey])].map((_,i)=>{\n      console.log(i);\n      return <BurgerIngredent key={igKey + i} type={igKey} />;//igKey=salad and i =1,2,3//creation of unique key for each ingredent\n    });//[,] having array with 2 elements\n  })\n  .reduce((arr,el)=>{\n    return arr.concat(el)\n  },[]);\n      console.log(transformedIngredent);\n  if(transformedIngredent.length === 0)\n  {\n    transformedIngredent=<p>Please start adding ingredients</p>\n  }\n  return (\n    <div className={classes.Burger}>\n    <BurgerIngredent type=\"bread-top\"/>\n    {transformedIngredent}\n    <BurgerIngredent type=\"bread-bottom\"/>\n    </div>\n  );\n};\n\nexport default burger;\n"]},"metadata":{},"sourceType":"module"}