{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthbhatia/Desktop/BurgerApp/my-app/src/containers/checkout/contactdata/ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../components/ui/button/Button';\nimport Spinner from '../../../components/ui/spinner/Spinner';\nimport classes from './ContactData.module.css';\nimport axios from '../../../Axios-Orders';\nimport Input from '../../../components/ui/input/Input';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Street'\n          },\n          value: ''\n        },\n        zipCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'ZIP Code'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Country'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Your E-Mail'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'COD',\n              displayValue: 'Cash on Delivery'\n            }, {\n              value: 'CC',\n              displayValue: 'Credit Card'\n            }]\n          },\n          value: ''\n        }\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredent: this.props.ingredent,\n        price: this.props.price\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n      });\n      console.log(this.props.ingredent);\n    };\n\n    this.inputChangedHandler = event => {\n      console.log(event.target.value);\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      changed: this.inputChangedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Success\",\n      clicked: this.orderHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Order\"));\n\n    if (this.state.loading) {\n      form = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 12\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.ContactData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, \"Enter your Contact data\"), form);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/siddharthbhatia/Desktop/BurgerApp/my-app/src/containers/checkout/contactdata/ContactData.js"],"names":["React","Component","Button","Spinner","classes","axios","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","zipCode","country","email","deliveryMethod","options","displayValue","loading","orderHandler","event","preventDefault","setState","order","ingredent","props","price","post","then","response","history","push","catch","error","console","log","inputChangedHandler","target","render","formElementsArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '../../../components/ui/button/Button';\nimport Spinner from '../../../components/ui/spinner/Spinner';\nimport classes from './ContactData.module.css';\nimport axios from '../../../Axios-Orders';\nimport Input from '../../../components/ui/input/Input';\n\nclass ContactData extends Component{\n  state = {\n      orderForm: {\n          name: {\n              elementType: 'input',\n              elementConfig: {\n                  type: 'text',\n                  placeholder: 'Your Name'\n              },\n              value: ''\n          },\n          street: {\n              elementType: 'input',\n              elementConfig: {\n                  type: 'text',\n                  placeholder: 'Street'\n              },\n              value: ''\n          },\n          zipCode: {\n              elementType: 'input',\n              elementConfig: {\n                  type: 'text',\n                  placeholder: 'ZIP Code'\n              },\n              value: ''\n          },\n          country: {\n              elementType: 'input',\n              elementConfig: {\n                  type: 'text',\n                  placeholder: 'Country'\n              },\n              value: ''\n          },\n          email: {\n              elementType: 'input',\n              elementConfig: {\n                  type: 'email',\n                  placeholder: 'Your E-Mail'\n              },\n              value: ''\n          },\n          deliveryMethod: {\n              elementType: 'select',\n              elementConfig: {\n                  options: [\n                    {value:'COD',displayValue:'Cash on Delivery'},\n           {value:'CC',displayValue:'Credit Card'},\n                  ]\n              },\n              value: ''\n          }\n      },\n      loading: false\n  }\n  orderHandler=(event)=>{\n    event.preventDefault();\n    this.setState({ loading:true });\n    const order={\n      ingredent:this.props.ingredent,\n      price:this.props.price,\n    }\n     axios.post('/orders.json',order)\n    .then(response=>{\n      this.setState({loading:false});\n      this.props.history.push('/');\n    })\n    .catch(error=>{\n        this.setState({loading:false})\n    });\n    console.log(this.props.ingredent);\n  }\n  inputChangedHandler=(event)=>{\n    console.log(event.target.value);\n  }\n\n  render(){\n    const formElementsArray=[];\n    for (let key in this.state.orderForm)\n    {\n      formElementsArray.push({\n        id:key,\n        config:this.state.orderForm[key]\n      })\n    }\n    let form=(\n      <form>\n      {formElementsArray.map(formElement=>(\n        <Input\n        key={formElement.id}\n        elementType={formElement.config.elementType}\n        elementConfig={formElement.config.elementConfig}\n        value={formElement.config.value}\n        changed={this.inputChangedHandler}\n        />\n      ))}\n            <Button btnType=\"Success\" clicked={this.orderHandler}>Order</Button>\n      </form>\n    );\n    if(this.state.loading){\n      form=<Spinner/>;\n    }\n    return(\n    <div className={classes.ContactData}>\n    <h4>Enter your Contact data</h4>\n    {form}\n    </div>\n  );\n  }\n}\nexport default ContactData;\n"]},"metadata":{},"sourceType":"module"}